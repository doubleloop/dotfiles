# This file has been auto-generated by i3-config-wizard(1).
# It will not be overwritten, so edit it as you like.
#
# Should you change your keyboard layout some time, delete
# this file and re-run i3-config-wizard(1).
#

# i3 config file (v4)
#
# Please see https://i3wm.org/docs/userguide.html for a complete reference!

set $mod Mod4
set $left h
set $down j
set $up k
set $right l

# Font for window titles. Will also be used by the bar unless a different font
# is used in the bar {} block below.
font pango:System San Francisco Display, fontawesome 9
new_window 1pixel

# This font is widely installed, provides lots of unicode glyphs, right-to-left
# text rendering and scalability on retina/hidpi displays (thanks to pango).
#font pango:DejaVu Sans Mono 8, fontawesome 8

# Before i3 v4.8, we used to recommend this one as the default:
# font -misc-fixed-medium-r-normal--13-120-75-75-C-70-iso10646-1
# The font above is very space-efficient, that is, it looks good, sharp and
# clear in small sizes. However, its unicode glyph coverage is limited, the old
# X core fonts rendering does not support right-to-left and this being a bitmap
# font, it doesn’t scale on retina/hidpi displays.

# Use Mouse+$mod to drag floating windows to their wanted position
floating_modifier $mod

# start a terminal
# bindsym $mod+Return exec i3-sensible-terminal
bindsym $mod+Return exec alacritty

# kill focused window
bindsym $mod+ctrl+q kill

# start dmenu (a program launcher)
bindsym $mod+d exec dmenu_run
# bindsym $mod+d exec --no-startup-id i3-dmenu-desktop

# change focus
bindsym $mod+$left focus left
bindsym $mod+$down focus down
bindsym $mod+$up focus up
bindsym $mod+$right focus right

# alternatively, you can use the cursor keys:
bindsym $mod+Left focus left
bindsym $mod+Down focus down
bindsym $mod+Up focus up
bindsym $mod+Right focus right

# move focused window
bindsym $mod+ctrl+$left move workspace to output left
bindsym $mod+ctrl+$down move workspace to output down
bindsym $mod+ctrl+$up move workspace to output up
bindsym $mod+ctrl+$right move workspace to output right

# split in horizontal orientation
bindsym $mod+s split h

# split in vertical orientation
bindsym $mod+v split v

# enter fullscreen mode for the focused container
bindsym $mod+f fullscreen toggle

# change container layout (stacked, tabbed, toggle split)
# bindsym $mod+s layout stacking
bindsym $mod+w layout tabbed
bindsym $mod+e layout toggle split

# toggle tiling / floating
bindsym $mod+Shift+space floating toggle

# change focus between tiling / floating windows
bindsym $mod+space focus mode_toggle

# focus the parent container
bindsym $mod+a focus parent

# focus the child container
#bindsym $mod+d focus child

# Define names for default workspaces for which we configure key bindings later on.
# We use variables to avoid repeating the names in multiple places.
set $ws1 "1 "
set $ws2 "2 "
set $ws3 "3"
set $ws4 "4"
set $ws5 "5"
set $ws6 "6"
set $ws7 "7"
set $ws8 "8"
set $ws9 "9 "
set $ws10 "10 "

bindsym $mod+n workspace next_on_output
bindsym $mod+p workspace prev_on_output
bindsym Mod1+Tab workspace back_and_forth
bindsym $mod+Tab workspace back_and_forth

# switch to workspace
bindsym $mod+1 workspace $ws1
bindsym $mod+2 workspace $ws2
bindsym $mod+3 workspace $ws3
bindsym $mod+4 workspace $ws4
bindsym $mod+5 workspace $ws5
bindsym $mod+6 workspace $ws6
bindsym $mod+7 workspace $ws7
bindsym $mod+8 workspace $ws8
bindsym $mod+9 workspace $ws9
bindsym $mod+0 workspace $ws10

# move focused container to workspace
bindsym $mod+ctrl+1 move container to workspace $ws1; workspace $ws1
bindsym $mod+ctrl+2 move container to workspace $ws2; workspace $ws2
bindsym $mod+ctrl+3 move container to workspace $ws3; workspace $ws3
bindsym $mod+ctrl+4 move container to workspace $ws4; workspace $ws4
bindsym $mod+ctrl+5 move container to workspace $ws5; workspace $ws5
bindsym $mod+ctrl+6 move container to workspace $ws6; workspace $ws6
bindsym $mod+ctrl+7 move container to workspace $ws7; workspace $ws7
bindsym $mod+ctrl+8 move container to workspace $ws8; workspace $ws8
bindsym $mod+ctrl+9 move container to workspace $ws9; workspace $ws9
bindsym $mod+ctrl+0 move container to workspace $ws10; workspace $ws10

# for_window [class="keepassxc"] floating enable
assign [class="qutebrowser"] $ws1
assign [class="Alacritty"] $ws2
assign [class="Element"] $ws9
# https://github.com/i3/i3/issues/2060
for_window [class="Spotify"] move to workspace $ws10
assign [class ="qemu-system-x86_64"] $ws5
for_window [class="qemu-system-x86_64"] floating enable

# reload the configuration file
bindsym $mod+ctrl+c reload
# restart i3 inplace (preserves your layout/session, can be used to upgrade i3)
bindsym $mod+ctrl+r restart
# exit i3 (logs you out of your X session)
bindsym $mod+ctrl+e exec "i3-nagbar -t warning -m 'You pressed the exit shortcut. Do you really want to exit i3? This will end your X session.' -b 'Yes, exit i3' 'i3-msg exit'"

# resize window (you can also use the mouse for that)
mode "resize" {
        # These bindings trigger as soon as you enter the resize mode

        # Pressing left will shrink the window’s width.
        # Pressing right will grow the window’s width.
        # Pressing up will shrink the window’s height.
        # Pressing down will grow the window’s height.
        bindsym $left resize shrink width 10 px or 10 ppt
        bindsym $down resize grow height 10 px or 10 ppt
        bindsym $up resize shrink height 10 px or 10 ppt
        bindsym $right resize grow width 10 px or 10 ppt

        # same bindings, but for the arrow keys
        bindsym Left resize shrink width 10 px or 10 ppt
        bindsym Down resize grow height 10 px or 10 ppt
        bindsym Up resize shrink height 10 px or 10 ppt
        bindsym Right resize grow width 10 px or 10 ppt

        # back to normal: Enter or Escape or $mod+r
        bindsym Return mode "default"
        bindsym Escape mode "default"
        bindsym $mod+r mode "default"
}

bindsym $mod+r mode "resize"

# Start i3bar to display a workspace bar (plus the system information i3status
# finds out, if available)
bar {
        position top
        status_command i3blocks
        tray_output primary
}

# Pulse Audio controls
# bindsym XF86AudioRaiseVolume exec --no-startup-id pactl set-sink-volume 0 +5% #increase sound volume
# bindsym XF86AudioLowerVolume exec --no-startup-id pactl set-sink-volume 0 -5% #decrease sound volume
# bindsym XF86AudioMute exec --no-startup-id pactl set-sink-mute 0 toggle # mute sound

# Sreen brightness controls
bindsym XF86MonBrightnessUp exec xbacklight -inc 10 # increase screen brightness
bindsym XF86MonBrightnessDown exec xbacklight -dec 10 # decrease screen brightness

# Media player controls
bindsym XF86AudioPlay exec playerctl play-pause
bindsym XF86AudioPause exec playerctl stop
bindsym XF86AudioNext exec playerctl next
bindsym XF86AudioPrev exec playerctl previous

bindsym XF86ScreenSaver exec --no-startup-id i3lock -e -c 000000
bindsym $mod+b exec --no-startup-id i3lock -e -c 000000
exec xautolock -time 10 -locker 'i3lock -e -c 000000' -detectsleep

bindsym --release Print exec scrot -z -m ~/media/pictures/screenshots/%Y-%m-%d-%H:%M:%s.png
bindsym --release Shift+Print exec scrot -z -s ~/media/pictures/screenshots/%Y-%m-%d-%H:%M:%s.png
bindsym --release $mod+Shift+Print exec scrot -z -u -d 4 ~/media/pictures/screenshots/%Y-%m-%d-%H:%M:%s.png

# this sometimes crashes on my system..
# exec xinput set-prop "SynPS/2 Synaptics TouchPad" "libinput Tapping Enabled" 1
# exec xinput set-prop "SynPS/2 Synaptics TouchPad" "libinput Natural Scrolling Enabled" 1

exec_always feh --bg-scale ~/dropbox/backups/profile/jawsk1111.jpg

exec i3-msg workspace $ws2
exec alacritty
exec qutebrowser
exec element-desktop
exec gpm
exec --no-startup-id dropbox start
exec --no-startup-id nm-applet
exec --no-startup-id redshift
exec --no-startup-id blueman-applet
exec --no-startup-id xss-lock -l -- i3lock -e -c 000000
exec --no-startup-id volumeicon
exec --no-startup-id cbatticon -n -i symbolic
